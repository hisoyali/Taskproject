@using Tareas.Services
@inject TaskService TaskService
@using MudBlazor

<MudGrid>
	<MudItem xs="12" sm="8">
		<MudPaper Elevation="0" Class="d-flex align-center pa-2">
			<MudTextField T="string" Placeholder="Nueva tarea" @bind-Value="taskDescription" Class="flex-grow-1 mr-2" />
			<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddTask">Agregar</MudButton>
		</MudPaper>
		@if (!string.IsNullOrWhiteSpace(errorMessage))
		{
			<MudAlert Severity="Severity.Error" Dense="true" Class="mt-2">
				@errorMessage
			</MudAlert>
		}

	</MudItem>
	<MudItem xs="12" sm="4">
		<MudPaper Elevation="2" Class="pa-3 rounded-lg">
			<MudStack Spacing="2">
				<MudPaper Elevation="0" Class="d-flex align-center pa-2 mud-background-color-success">
					<MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Small" Color="Color.Success" Class="mr-2" />
					<MudText Typo="Typo.body2">
						<strong>Completadas:</strong> @TaskService.completadas
					</MudText>
				</MudPaper>
				<MudPaper Elevation="0" Class="d-flex align-center pa-2 mud-background-color-warning">
					<MudIcon Icon="@Icons.Material.Filled.Pending" Size="Size.Small" Color="Color.Warning" Class="mr-2" />
					<MudText Typo="Typo.body2">
						<strong>Pendientes:</strong> @TaskService.pendientes
					</MudText>
				</MudPaper>
			</MudStack>
		</MudPaper>
	</MudItem>
</MudGrid>

@code {
	[Parameter] public EventCallback OnTaskAdded { get; set; }
	private string taskDescription = string.Empty;
	private string errorMessage = string.Empty;

	private async Task AddTask()
	{
		if (!string.IsNullOrWhiteSpace(taskDescription))
		{

			TaskService.AddTask(taskDescription);
			taskDescription = string.Empty;
			await OnTaskAdded.InvokeAsync();
			errorMessage = string.Empty;

		}
		else
		{
			errorMessage = "La descripción no puede estar vacía.";
			return;
		}
	}


}
